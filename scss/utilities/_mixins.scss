@mixin letter-space($space) {
  letter-spacing: $space;
}

@mixin space-inside($top: null, $right: null, $bottom: null, $left: null) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

@mixin space-outside($top: null, $right: null, $bottom: null, $left: null){
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

@mixin positioning($position: null, $top: null, $right: null, $bottom: null, $left: null){
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin big-letters {
  text-transform: uppercase;
}

@mixin italic-font {
  font-style: italic;
}

@mixin center {
  text-align: center;
}

@mixin center-container($width: null) {
  width: $width;
  margin: 0 auto;
}

@mixin remove-underline {
  text-decoration: none;
}

@mixin full-width {
  width: 100%;
}

@mixin full-screen {
  width: 100%;
  height: 100vh;
}

@mixin clip($clip: null, $height: null) {
  clip-path: polygon(0 0, 100% 0, 100% $clip, 0 100%);
  height: $height;
}

@mixin square($value: null){
  height: $value;
  width: $value;
}

@mixin rounded ($width: null, $height: null) {
  width: $width;
  height: $height;
  border-radius: 50%;
}

@mixin flexy($dir: row, $just: null, $align: null){
  display: flex;
  flex-direction: $dir;
  justify-content: $just;
  align-items: $align;
}

// Media Queries
@mixin media($breakpoint) {
  @if $breakpoint == "medium" {
    @media(min-width: $medium){
      @content;
    }
  }
  @else if $breakpoint == "large"{
    @media(min-width: $large){
      @content;
    }
  }
  @else if $breakpoint == "extra-large" {
    @media(min-width: $extra-large){
      @content;
    }
  }
  @else if $breakpoint == "huge" {
    @media(min-width: $huge){
      @content;
    }
  }
  @else {
    @warn "#{$breakpoint} is not a valid breakpoint name.";
  }
}
